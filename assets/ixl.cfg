-- vim:ft=lua
-- Startup script for the interactive mode of ned

local L4 = require("L4");
local ld = L4.default_loader;

-- Channels for accessing different vbus objects
local vbus_eth  = ld:new_channel();        -- "Catch-all" Vbus for all Eth devs
local vbus_i350 = ld:new_channel();        -- Vbus with I350 NICs
local vbus_x540 = ld:new_channel();        -- Vbus with X540T NICs

-- Table that maps bus names to channel objects
local bus_table = {
    ["vbus_eth"]  = vbus_eth,
    ["vbus_i350"] = vbus_i350,
    ["vbus_x540"] = vbus_x540,
};

-- Starts ixl-pcap, using the first device on the Vbus specified by bus_name
-- (defaults to ethdevs).
function ixl_pcap(bus_name, pkt_cnt)
    pkt_cnt  = pkt_cnt or -1;               -- Default to unbounded capture
    bus_name = bus_name or "vbus_eth";

    local bus = bus_table[bus_name];
    if (bus)
        then
        ld:startv(
            {
                caps =
                    {
                        vbus = bus,
                    },
            },
            "rom/ixl-pcap",
            "0",
            pkt_cnt);
    else
        print("Cannot start ixl-pcap: Bus " .. bus_name .. " does not exist!");
    end
end

-- Starts ixl-pcap, using the third device on the Vbus specified by bus_name
-- (defaults to ethdevs).
function ixl_pcap2(bus_name, pkt_cnt)
    pkt_cnt  = pkt_cnt or -1;               -- Default to unbounded capture
    bus_name = bus_name or "vbus_eth";

    local bus = bus_table[bus_name];
    if (bus)
        then
        ld:startv(
            {
                caps =
                    {
                        vbus = bus,
                    },
            },
            "rom/ixl-pcap",
            "2",
            pkt_cnt);
    else
        print("Cannot start ixl-pcap: Bus " .. bus_name .. " does not exist!");
    end
end

-- Starts ixl-pktgen, using the first device on the Vbus specified by bus_name
-- (defaults to ethdevs).
function ixl_pktgen(bus_name)
    bus_name = bus_name or "vbus_eth";

    local bus = bus_table[bus_name];
    if (bus)
        then
        ld:startv(
            {
                caps =
                    {
                        vbus = bus,
                    },
            },
            "rom/ixl-pktgen",
            "0");
    else
        print("Cannot start ixl-pktgen: Bus " .. bus_name .. " does not exist!");
    end
end

--
-- Start L4Re's IO service
--
ld:start(
    {
        caps = {
            sigma0   = L4.Env.sigma0;
            icu      = L4.Env.icu;
            iommu    = L4.Env.iommu;
            ethdevs  = vbus_eth:svr();
            i350devs = vbus_i350:svr();
            x540devs = vbus_x540:svr();
        },
        log = { "io", "r" },
    },
    "rom/io rom/ixl.vbus -v"
);

--
-- Start interactive ned console
--
cmd = ld:new_channel();

ld:start({ log = L4.Env.log, caps = { svr = cmd }}, "rom/ned-prompt");

L4.server_loop(cmd);
